generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  username     String   @unique
  passwordHash String
}

model Team {
  id         String   @id @default(dbgenerated("gen_random_uuid()"))
  name       String   @unique
  isActive   Boolean? @default(false)
  awayGames  Game[]   @relation("awayTeam")
  homeGames  Game[]   @relation("homeTeam")
  bringBases Week[]   @relation("bringBase")
  takeBases  Week[]   @relation("takeBase")
}

model Week {
  id            String   @id @default(uuid())
  date          DateTime
  title         String
  bringBaseId   String?
  takeBaseId    String?
  bringBaseTeam Team?    @relation("bringBase", fields: [bringBaseId], references: [id])
  takeBaseTeam  Team?    @relation("takeBase", fields: [takeBaseId], references: [id])
  games         Game[]
}

model Game {
  id         String   @id @default(uuid())
  time       DateTime
  weekId     String
  homeTeamId String?
  awayTeamId String?
  winner     String
  gameType   GameType @default(REGULAR)
  title      String?
  awayTeam   Team?    @relation("awayTeam", fields: [awayTeamId], references: [id])
  homeTeam   Team?    @relation("homeTeam", fields: [homeTeamId], references: [id])
  week       Week     @relation(fields: [weekId], references: [id])
}

enum GameType {
  REGULAR
  EXHIBITION
  PLAYOFF
}
